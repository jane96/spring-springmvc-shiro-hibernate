<?xml version="1.0" encoding="UTF-8"?>
<!-- 引入约束 -->
<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:p="http://www.springframework.org/schema/p"
	   xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd"
		default-autowire="byName"
		default-lazy-init="true">
	
	<!-- 导入外部的config,mysql.properties文件 -->
	<context:property-placeholder location="classpath:*.propertiese"  />
	<!-- 缓存配置 -->
	<bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
		<property name="configLocation" value="/WEB-INF/classes/ehcache-local.xml" />
	</bean>
	<!-- 扫描注册bean 除了@Controller之外-->
	<context:component-scan base-package="com.web.*" >  
        <context:exclude-filter type="annotation"  
            expression="org.springframework.stereotype.Controller" />  
    </context:component-scan> 
    <!-- 配置SessionFactory -->
		<bean id="sessionFactory" class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		
 		<!-- 扫描实体类 的映射-->
		<property name="packagesToScan" value="com.web.entity"/>
 		<!-- 指定hibernate的配置文件 -->
		<property name="hibernateProperties">  
			<props>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="hibernate.cache.provider_configuration_file_resource_path">cache/ehcache-hibernate-local.xml</prop> 
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">${hibernate.search.default.indexBase}</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
			</props>
		</property> 
        	<property name="namingStrategy">
				<bean class="org.hibernate.cfg.ImprovedNamingStrategy" />
			</property>
		<!-- 配置c3p0数据库连接池 -->

 		<property name="dataSource">

 		<bean class="com.mchange.v2.c3p0.ComboPooledDataSource">
 		<!-- 数据连接信息 -->

 		<property name="jdbcUrl" value="${jdbcUrl}"></property>

 		<property name="driverClass" value="${driverClass}"></property>

 		<property name="user" value="${user}"></property>

 		<property name="password" value="${password}"></property>

 		<!-- 其他配置 -->

 		<!--初始化时获取三个连接，取值应在minPoolSize与maxPoolSize之间。Default: 3 -->

 		<property name="initialPoolSize" value="3"></property>

 		<!--连接池中保留的最小连接数。Default: 3 -->

 		<property name="minPoolSize" value="3"></property>

 		<!--连接池中保留的最大连接数。Default: 15 -->

 		<property name="maxPoolSize" value="5"></property>

 		<!--当连接池中的连接耗尽的时候c3p0一次同时获取的连接数。Default: 3 -->

 		<property name="acquireIncrement" value="3"></property>

 		<!-- 控制数据源内加载的PreparedStatements数量。如果maxStatements与maxStatementsPerConnection均为0，则缓存被关闭。Default: 0 -->

 		<property name="maxStatements" value="8"></property>

 		<!--maxStatementsPerConnection定义了连接池内单个连接所拥有的最大缓存statements数。Default: 0 -->

 		<property name="maxStatementsPerConnection" value="5"></property>

 		<!--最大空闲时间,1800秒内未使用则连接被丢弃。若为0则永不丢弃。Default: 0 -->

 		<property name="maxIdleTime" value="1800"></property>

 	</bean>

 	</property>

 </bean>
 
 <!-- 配置声明式事务管理（采用注解的方式） -->

 <bean id="txManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">

 <property name="sessionFactory" ref="sessionFactory"></property>

 </bean>

<!-- 配置 Annotation 驱动，扫描@Transactional注解的类定义事务  -->
 	<tx:annotation-driven transaction-manager="txManager" proxy-target-class="true"/> 
 <!-- 配置 JSR303 Bean Validator 定义 -->
	<!--<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean" /> -->

	
</beans> 